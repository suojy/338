{"version":3,"sources":["components/home.js","App.js","serviceWorker.js","index.js"],"names":["cards","Input","Search","Home","state","submit","handleSubmit","_this","setState","classes","this","props","react_default","a","createElement","Fragment","CssBaseline_default","className","heroUnit","heroContent","Typography_default","component","variant","align","color","gutterBottom","paragraph","fontSize","FormControl_default","margin","InputLabel_default","shrink","htmlFor","bootstrapFormLabel","InputBase_default","id","defaultValue","root","bootstrapRoot","input","bootstrapInput","heroButtons","Button_default","onClick","classNames","layout","cardGrid","Grid_default","container","spacing","map","card","item","key","sm","md","lg","Card_default","CardMedia_default","cardMedia","image","title","CardContent_default","cardContent","CardActions_default","size","React","Component","withStyles","theme","appBar","position","icon","marginRight","unit","backgroundColor","palette","background","paper","maxWidth","padding","concat","marginTop","Object","defineProperty","width","marginLeft","breakpoints","up","height","display","flexDirection","paddingTop","flexGrow","footer","flexWrap","label + &","borderRadius","common","white","border","transition","transitions","create","fontFamily","join","&:focus","borderColor","boxShadow","App","home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.1bbfaaaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n//import Input from '@material-ui/core/Input';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Input } from 'antd';\r\nconst Search = Input.Search;\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n  heroUnit: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  heroContent: {\r\n    maxWidth: 600,\r\n    margin: '0 auto',\r\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing.unit * 4,\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  cardGrid: {\r\n    padding: `${theme.spacing.unit * 8}px 0`,\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing.unit * 6,\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  bootstrapRoot: {\r\n    'label + &': {\r\n      marginTop: theme.spacing.unit * 3,\r\n    },\r\n  },\r\n  bootstrapInput: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.common.white,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n  bootstrapFormLabel: {\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nclass Home extends React.Component {\r\n    state = { submit: false };\r\n\r\n    handleSubmit = () => {\r\n      this.setState(state => ({ submit: !state.submit }));\r\n    };\r\nrender(){\r\n  const { classes } = this.props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      {/*<AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <CameraIcon className={classes.icon} />\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Album layout\r\n          </Typography>\r\n        </Toolbar>\r\n  </AppBar>*/}\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroUnit}>\r\n          <div className={classes.heroContent}>\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            Entertainment Recommendations\r\n            </Typography>\r\n            <Typography variant=\"h6\" align=\"center\" color=\"#43425D\" paragraph>\r\n              Find new shows and concerts...\r\n            </Typography>\r\n            <CssBaseline />\r\n         \r\n            <Typography align=\"center\" color=\"textSecondary\" fontSize={16}>\r\n              Please Enter Your Twitter Handle\r\n            </Typography>\r\n         \r\n         <FormControl className={classes.margin}>\r\n        <InputLabel shrink htmlFor=\"bootstrap-input\" className={classes.bootstrapFormLabel}>  \r\n        </InputLabel>\r\n        <InputBase\r\n          id=\"bootstrap-input\"\r\n          defaultValue=\"\"\r\n          classes={{\r\n            root: classes.bootstrapRoot,\r\n            input: classes.bootstrapInput,\r\n          }}\r\n        />\r\n      </FormControl>\r\n      <div className={classes.heroButtons}>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>\r\n      Find Shows\r\n      </Button>\r\n      \r\n            {/*<div className={classes.heroButtons}>\r\n              <Grid container spacing={16} justify=\"center\">\r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Main call to action\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    Secondary action\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n        </div>*/}\r\n          </div>\r\n          </div>\r\n          </div>\r\n        \r\n        {this.state.submit===true?(<div className={classNames(classes.layout, classes.cardGrid)}>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n        Our Recommendations for You  \r\n        </Typography>\r\n          {/* End hero unit */}\r\n          <Grid container spacing={40}>\r\n            {cards.map(card => (\r\n              <Grid item key={card} sm={6} md={4} lg={3}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      Shows\r\n                    </Typography>\r\n                    <Typography>\r\n                      This is a media card. You can use this section to describe the content.\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      View\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>):null}\r\n      </main>\r\n      {/* Footer */}\r\n      {/*<footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          Something here to give the footer a purpose!\r\n        </Typography>\r\n            </footer>}*/}\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n            }\r\n}\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Home);","import React, { Component } from 'react';\n\nimport './App.css';\nimport Home from \"./components/home\"\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          {/*<p>\n            My Token={window.token}\n          </p>*/}\n          <Home/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}